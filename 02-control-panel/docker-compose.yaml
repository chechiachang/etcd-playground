# https://github.com/jpetazzo/container.training/blob/main/compose/simple-k8s-control-plane/docker-compose.yaml

version: "3"

networks:
  etcd:
    name: etcd
    external: true

services:

  # https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/units/kube-apiserver.service
  kube-apiserver:
    container_name: kube-apiserver
    networks:
      - etcd
    #network_mode: "service:pause"
    image: registry.k8s.io/kube-apiserver:v1.31.0
    entrypoint: kube-apiserver
    command: 
      - --etcd-servers=http://etcd-1:2379,http://etcd-2:2379,http://etcd-3:2379 
      - --bind-address=0.0.0.0
      - --tls-private-key-file=/var/lib/kubernetes/ca.key
      - --tls-cert-file=/var/lib/kubernetes/ca.crt
      - --kubelet-client-key=/var/lib/kubernetes/kube-apiserver.key
      - --kubelet-client-certificate=/var/lib/kubernetes/kube-apiserver.crt
      - --service-account-key-file=/var/lib/kubernetes/service-accounts.crt
      - --service-account-signing-key-file=/var/lib/kubernetes/service-accounts.key
      - --service-account-issuer=https://server.kubernetes.local:6443
    volumes:
      - apiserver:/var/lib/kubernetes/

  kube-controller-manager:
    container_name: kube-controller-manager
    networks:
      - etcd
    #network_mode: "service:pause"
    image: registry.k8s.io/kube-controller-manager:v1.31.0
    command:
      - kube-controller-manager
      - --master http://localhost:8080
    
  kube-scheduler:
    container_name: kube-scheduler
    networks:
      - etcd
    #network_mode: "service:pause"
    image: registry.k8s.io/kube-scheduler:v1.31.0
    command:
      - kube-scheduler
      - --master http://localhost:8080

volumes:
  apiserver:
    name: apiserver
    driver: local
    driver_opts:
      type: none
      o: bind
      device: apiserver
